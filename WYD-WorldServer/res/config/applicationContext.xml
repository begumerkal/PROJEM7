<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd        
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

	<!-- JDBC参数配置 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- 设置JDBC驱动名称 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!-- 设置JDBC连接URL -->
		<property name="url" value="${jdbc.url}" />
		<!-- 设置数据库用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!-- 设置数据库密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 设置连接池初始值 -->
		<property name="initialSize" value="5" />
		<!-- 设置连接池最大值 -->
		<property name="maxActive" value="50" />
		<!-- 设置连接池最小空闲值 -->
		<property name="minIdle" value="5" />
		<!-- 设置连接池最大空闲值 -->
		<property name="maxIdle" value="10" />
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 配置Hibernate拦截器,自动填充数据的插入、更新时间 -->
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="hibernateProperties">
			<value>
				<!-- 设置数据库方言 -->
				hibernate.dialect=${hibernate.dialect}
				<!-- 设置自动创建|更新|验证数据库表结构 -->
				hibernate.hbm2ddl.auto=${hibernate.hbm2ddl.auto}
				<!-- 输出SQL语句到控制台 -->
				hibernate.show_sql=${hibernate.show_sql}
				<!-- 格式化输出到控制台的SQL语句 -->
				hibernate.format_sql=${hibernate.format_sql}
				<!-- 是否开启二级缓存 -->
				hibernate.cache.use_second_level_cache=${hibernate.cache.use_second_level_cache}
				<!-- 配置二级缓存产品 -->
				hibernate.cache.provider_class=${hibernate.cache.provider_class}
				<!-- 是否开启查询缓存 -->
				hibernate.cache.use_query_cache=${hibernate.cache.use_query_cache}
				<!-- 数据库批量查询数 -->
				hibernate.jdbc.fetch_size=${hibernate.jdbc.fetch_size}
				<!-- 数据库批量更新数 -->
				hibernate.jdbc.batch_size=${hibernate.jdbc.batch_size}
				<!-- 是否采用CGLIB动态代理对象 -->
				hibernate.bytecode.use_reflection_optimizer=${hibernate.bytecode.use_reflection_optimizer}
			</value>
		</property>
	</bean>

	<!-- world TransactionManager -->
	<bean id="worldTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="worldBaseTransactionProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="worldTransactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="find*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="remove*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="create*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="is*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<!-- mySql 配置结束 -->

	<mongo:mongo host="127.0.0.1" port="27017" />
	<!-- mongo的工厂，通过它来取得mongo实例,dbname为mongodb的数据库名，没有的话会自动创建 -->
	<!-- mongo:db-factory dbname="log_msg" mongo-ref="mongo" username="test" password="123456"/ -->
	<mongo:db-factory dbname="${mongodb.dbname}" mongo-ref="mongo" />

	<!-- mongodb的主要操作对象，所有对mongodb的增删改查的操作都是通过它完成 -->
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean>
	<bean id="mongoRepositoryFactory" class="org.springframework.data.mongodb.repository.support.MongoRepositoryFactory">
		<constructor-arg ref="mongoTemplate" />
	</bean>

	<!-- 映射转换器，扫描back-package目录下的文件，根据注释，把它们作为mongodb的一个collection的映射 -->
	<mongo:mapping-converter base-package="com.mongo.entity,com.wyd.empire.world.bean" />
	<!-- mongodb bean的仓库目录，会自动扫描扩展了MongoRepository接口的接口进行注入 -->
	<mongo:repositories base-package="com.mongo.dao.impl,com.wyd.empire.world.dao.impl" />
	<context:component-scan base-package="com.wyd.empire.world" />













	<!-- world Service -->
	<bean id="PlayerService" parent="worldBaseTransactionProxy">
		<property name="target">
			<bean class="com.wyd.empire.world.server.service.base.impl.BasePlayerService">
				<property name="playerDao">
					<bean class="com.wyd.empire.world.dao.impl.PlayerDao">
						<property name="sessionFactory" ref="sessionFactory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="ChatRecordService" parent="worldBaseTransactionProxy">
		<property name="target">
			<bean class="com.wyd.empire.world.server.service.base.impl.ChatRecordService">
				<property name="dao">
					<bean class="com.wyd.empire.world.dao.impl.ChatRecordDao">
						<property name="sessionFactory" ref="sessionFactory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="OperationConfigService" parent="worldBaseTransactionProxy">
		<property name="target">
			<bean class="com.wyd.empire.world.server.service.base.impl.OperationConfigService">
				<property name="dao">
					<bean class="com.wyd.empire.world.dao.impl.OperationConfigDao">
						<property name="sessionFactory" ref="sessionFactory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>
	<bean id="OrderService" parent="worldBaseTransactionProxy">
		<property name="target">
			<bean class="com.wyd.empire.world.server.service.base.impl.OrderService">
				<property name="dao">
					<bean class="com.wyd.empire.world.dao.impl.OrderDao">
						<property name="sessionFactory" ref="sessionFactory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>



	<!-- 第三方渠道配置 by:zengxc -->
	<bean id="ThirdConfigService" parent="worldBaseTransactionProxy">
		<property name="target">
			<bean class="com.wyd.empire.world.server.service.base.impl.ThirdConfigService">
				<property name="dao">
					<bean class="com.wyd.empire.world.dao.impl.ThirdConfigDao">
						<property name="sessionFactory" ref="sessionFactory" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>



</beans>